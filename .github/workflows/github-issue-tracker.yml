name: GitHub Issue Tracker with Feishu Notification

on:
  issues:
    types: [opened]
  schedule:
    # Run every day at 8:30 Beijing Time (00:30 UTC)
    - cron: '30 0 * * *'
  workflow_dispatch:

jobs:
  process-new-issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check Beijing Time
        id: check_time
        run: |
          # Get current time in Beijing timezone (UTC+8)
          BEIJING_HOUR=$(TZ='Asia/Shanghai' date +%H)
          BEIJING_MINUTE=$(TZ='Asia/Shanghai' date +%M)

          echo "Beijing Time: ${BEIJING_HOUR}:${BEIJING_MINUTE}"

          # Check if time is between 00:00 and 08:30
          if [ $BEIJING_HOUR -lt 8 ] || ([ $BEIJING_HOUR -eq 8 ] && [ $BEIJING_MINUTE -le 30 ]); then
            echo "should_delay=true" >> $GITHUB_OUTPUT
            echo "‚è∞ Issue created during quiet hours (00:00-08:30 Beijing Time)"
            echo "Will schedule notification for 08:30"
          else
            echo "should_delay=false" >> $GITHUB_OUTPUT
            echo "‚úÖ Issue created during active hours, will notify immediately"
          fi

      - name: Add pending label if in quiet hours
        if: steps.check_time.outputs.should_delay == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['pending-feishu-notification']
            });

      - name: Setup Node.js
        if: steps.check_time.outputs.should_delay == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Summarize issue with Claude
        if: steps.check_time.outputs.should_delay == 'false'
        id: summarize
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.CLAUDE_TRANSLATOR_APIKEY }}
          prompt: |
            Please analyze this GitHub issue and provide a concise summary in Chinese (‰∏≠Êñá).

            Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            URL: ${{ github.event.issue.html_url }}

            Issue Body:
            ${{ github.event.issue.body }}

            Please provide:
            1. A brief Chinese summary of the issue (2-3 sentences)
            2. The main problem or request
            3. Any important technical details mentioned

            Format your response in clean markdown, suitable for display in a notification card.
            Keep it concise but informative.
        env:
          ANTHROPIC_BASE_URL: ${{ secrets.CLAUDE_TRANSLATOR_BASEURL }}

      - name: Send to Feishu immediately
        if: steps.check_time.outputs.should_delay == 'false'
        env:
          FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
          FEISHU_WEBHOOK_SECRET: ${{ secrets.FEISHU_WEBHOOK_SECRET }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
          ISSUE_LABELS: ${{ join(github.event.issue.labels.*.name, ',') }}
          ISSUE_SUMMARY: ${{ steps.summarize.outputs.response }}
        run: |
          node scripts/feishu-notify.js

      - name: Comment on issue
        if: steps.check_time.outputs.should_delay == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `${{ steps.summarize.outputs.response }}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ü§ñ AI Summary\n\n${summary}\n\n---\n*This summary was generated by Claude and has been sent to the team via Feishu.*`
            });

  process-pending-issues:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get pending issues
        id: get_issues
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'pending-feishu-notification',
              state: 'open'
            });

            console.log(`Found ${issues.data.length} pending issues`);
            return issues.data.map(issue => ({
              number: issue.number,
              title: issue.title,
              url: issue.html_url,
              author: issue.user.login,
              body: issue.body,
              labels: issue.labels.map(l => l.name).filter(l => l !== 'pending-feishu-notification')
            }));

      - name: Process each pending issue
        env:
          FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
          FEISHU_WEBHOOK_SECRET: ${{ secrets.FEISHU_WEBHOOK_SECRET }}
          ANTHROPIC_API_KEY: ${{ secrets.CLAUDE_TRANSLATOR_APIKEY }}
          ANTHROPIC_BASE_URL: ${{ secrets.CLAUDE_TRANSLATOR_BASEURL }}
        run: |
          node scripts/process-pending-issues.js '${{ steps.get_issues.outputs.result }}'

      - name: Remove pending labels
        uses: actions/github-script@v7
        with:
          script: |
            const issues = ${{ steps.get_issues.outputs.result }};
            for (const issue of issues) {
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  name: 'pending-feishu-notification'
                });
                console.log(`‚úÖ Removed label from issue #${issue.number}`);
              } catch (error) {
                console.log(`‚ö†Ô∏è  Could not remove label from issue #${issue.number}: ${error.message}`);
              }
            }
